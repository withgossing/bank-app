#!/bin/bash

# Bank Application 빌드 스크립트

set -e

echo "🏦 Bank Application 빌드 시작"
echo "============================"
echo ""

# 색상 정의
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# 프로젝트 루트
PROJECT_ROOT="/Users/gossing/WorkPlace/bank-app"
cd "$PROJECT_ROOT"

# Gradle Wrapper 생성 함수
create_gradle_wrapper() {
    local service_dir=$1
    echo "Gradle Wrapper 생성: $service_dir"
    
    cd "$service_dir"
    
    # gradle-wrapper.properties 생성
    mkdir -p gradle/wrapper
    cat > gradle/wrapper/gradle-wrapper.properties << EOF
distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
networkTimeout=10000
validateDistributionUrl=true
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
EOF

    # gradlew 스크립트 생성
    cat > gradlew << 'EOF'
#!/bin/sh

##############################################################################
#
#   Gradle start up script for POSIX generated by Gradle.
#
##############################################################################

# Attempt to set APP_HOME
DIRNAME=$(dirname "$0")
APP_HOME=$(cd "$DIRNAME" && pwd)

# Use the maximum available, or set MAX_FD != -1 to use that value.
MAX_FD=maximum

# OS specific support
case "$(uname)" in
  CYGWIN* | MINGW* | MSYS*)
    cygwin=true
    ;;
esac

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ]; then
    JAVACMD=$JAVA_HOME/bin/java
else
    JAVACMD=java
fi

# Increase the maximum file descriptors if we can.
if [ "$MAX_FD" != "maximum" ]; then
    MAX_FD_LIMIT=$(ulimit -H -n)
    if [ $? -eq 0 ]; then
        if [ "$MAX_FD" = "maximum" ] || [ "$MAX_FD" = "max" ]; then
            MAX_FD=$MAX_FD_LIMIT
        fi
        ulimit -n $MAX_FD
    fi
fi

exec "$JAVACMD" \
  -classpath "$CLASSPATH" \
  org.gradle.wrapper.GradleWrapperMain \
  "$@"
EOF

    chmod +x gradlew
    cd "$PROJECT_ROOT"
}

# 백엔드 서비스 목록
BACKEND_SERVICES=(
    "discovery-service"
    "gateway-service"
    "user-service"
    "account-service"
    "product-service"
)

echo "1. Gradle Wrapper 설정"
echo "====================="
for service in "${BACKEND_SERVICES[@]}"; do
    create_gradle_wrapper "$service"
    echo -e "${GREEN}✓${NC} $service"
done

echo ""
echo "2. Docker 이미지 빌드"
echo "==================="
echo ""

# Docker Compose로 빌드
echo "Docker Compose 빌드 시작..."
docker-compose build

echo ""
echo -e "${GREEN}✅ 빌드 완료!${NC}"
echo ""
echo "다음 명령어로 실행하세요:"
echo "  docker-compose up -d"
echo ""
echo "서비스 상태 확인:"
echo "  docker-compose ps"
